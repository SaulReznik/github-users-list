{"version":3,"sources":["components/Message.js","components/User.js","components/UserForm.js","components/EditableUser.js","App.js","index.js"],"names":["Message","props","className","text","User","user","onUserEdit","onUserDelete","avatar","login","url","id","alt","src","href","target","rel","onClick","UserForm","state","onLoginChange","e","setState","value","this","onChange","onFormSubmit","onFormCancel","React","Component","EditableUser","isEditing","handleFormSubmit","key","App","users","isLoading","isFailedToLoad","filter","updatedUser","updatedUsers","map","fetch","then","response","json","processedUsers","avatar_url","html_url","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.569d02fb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Message = props => (\n    <div className='MessageContainer'>\n        <h1>{props.text}</h1>\n    </div>\n);\n\nexport default Message;","import React from 'react';\n\nconst User = props => {\n    //Destructuring stuff for better developer experience\n    const { user, onUserEdit, onUserDelete } = props;\n    const { avatar, login, url, id } = user;\n\n    return (\n        <div className='User'>\n            <div className=\"UserColumn\">\n                <div className=\"ImageContainer\">\n                    <img alt='avatar' src={avatar} />\n                </div>\n                <div>\n                    <h2>{login}</h2>\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{login}'s page</a>\n                </div>\n            </div>\n            <div className=\"ButtonContainer\">\n                <button className=\"UserButton SuccessButton\" onClick={onUserEdit}>Edit</button>\n                <button className=\"UserButton DangerButton\" onClick={() => onUserDelete(id)}>Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default User;","import React from 'react';\n\nclass UserForm extends React.Component {\n    //Copying our users data for editing\n    state = {\n        user: {...this.props.user},\n    }\n\n    onLoginChange = e => {\n        this.setState({user: {\n            ...this.state.user,\n            login: e.target.value,\n        }});\n    }\n\n    render() {\n        const { user } = this.state;\n        \n        return (\n            <div className='User'>\n                <div className=\"UserFormContainer\">\n                    <span className='Label'>Login</span>\n                    <input\n                        onChange={e => this.onLoginChange(e)}\n                        value={user.login}\n                    />\n                </div>\n                <div className=\"ButtonContainer\">\n                    <button className=\"UserButton SuccessButton\" onClick={() => this.props.onFormSubmit(user)}>Save Changes</button>\n                    <button className=\"UserButton DangerButton\" onClick={this.props.onFormCancel}>Cancel</button>\n                </div>\n            </div>\n        );\n    }\n} \n\nexport default UserForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\nimport UserForm from './UserForm';\n\nclass EditableUser extends React.Component {\n    state = {\n        isEditing: false,  //Flag for form\n    };\n\n    //Open the form with this handler\n    onUserEdit = () => {\n        this.setState({isEditing: true})\n    }\n\n    onFormSubmit = user => {\n        this.props.handleFormSubmit(user);    //Send the edited user via this hanlder\n        this.setState({ isEditing: false });  //And close the form\n    };\n\n    //Close the form without changes\n    onFormCancel = () => this.setState({ isEditing: false }); \n\n    render() {\n        const { user, onUserDelete } = this.props;\n\n        //Using the form flag to decide what component to render\n        return this.state.isEditing ?\n        <UserForm\n            key={user.id}\n            user={user}\n            onFormSubmit={this.onFormSubmit}\n            onFormCancel={this.onFormCancel}\n        /> :\n        <User\n            key={user.id}\n            user={user}\n            onUserEdit={this.onUserEdit}\n            onUserDelete={onUserDelete}\n        />\n    }\n}\n\nexport default EditableUser;\n\n//Type validation\nEditableUser.propTypes = {\n    user: PropTypes.arrayOf(PropTypes.object)\n};","import React from 'react';\nimport './App.css';\n\nimport Message from './components/Message';\nimport EditableUser from './components/EditableUser';\n\nconst BASE_URL = 'https://api.github.com/users';\nclass App extends React.Component {\n  state = {\n    users: [],              \n    isLoading: true,        //Flag for loading\n    isFailedToLoad: false,  //Flag for Error\n  }\n\n  componentDidMount() {\n    fetch(BASE_URL)\n      .then(response => response.json())\n      .then(users => {\n        //Taking from our response the properies that we want\n        const processedUsers = users.map(user => ({\n          id: user.id,\n          avatar: user.avatar_url,\n          login: user.login,\n          url: user.html_url\n        }))\n\n        //And putting it in our state\n        this.setState({\n          users: processedUsers,\n          isLoading: false       //Loading is no longer needed \n        });\n      })\n      .catch((e) => {\n        this.setState({\n          isLoading: false,\n          isFailedToLoad: true   \n        })\n      })\n  }\n\n  //Save all users, instead of the chosen one which will be identified by it's ID\n  onUserDelete = id => {\n    this.setState({ users: this.state.users.filter(user => user.id !== id)});\n  }\n\n  //Here we recieving the updated user through form \n  handleFormSubmit = updatedUser => {\n    const { users } = this.state;\n\n    //Copying all users into new array\n    //And when we find the user that was changed\n    //We inserting the updated one into array\n    const updatedUsers = users.map(user => {\n      if (user.id === updatedUser.id) {\n        return updatedUser;\n      }\n      return user;\n    });\n    \n    //And updating the state with new ones\n    this.setState({users: updatedUsers});\n  }\n\n  render() {\n    const { users, isLoading, isFailedToLoad } = this.state;\n\n    //If data is not ready yet display content for loading\n    if (isLoading) return <Message text='Loading...' />\n\n    //If data was failed to be loaded display content for error\n    if (isFailedToLoad) return <Message text='Error' />\n\n    return (\n      <div className=\"App\">\n        <h1>GITHUB FOLKS</h1>\n        <div className=\"UsersContainer\">\n          {\n            users.map(user => (\n              <EditableUser \n                key={user.id} \n                user={user} \n                handleFormSubmit={this.handleFormSubmit}\n                onUserDelete={this.onUserDelete}\n              />\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}